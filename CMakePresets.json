{
    "version": 3,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 21,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "common-base",
            "hidden": true,
            "binaryDir": "${sourceDir}/out/build/${presetName}",
            "installDir": "${sourceDir}/out/install/${presetName}",
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": {
                    "type": "FILEPATH",
                    "value": "${sourceDir}/extern/vcpkg/scripts/buildsystems/vcpkg.cmake"
                }
            }
        },
        {
            "name": "linux-base",
            "hidden": true,
            "inherits": [
                "common-base"
            ],
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "cacheVariables": {
                "VCPKG_TARGET_TRIPLET": "x64-linux"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Linux"
                    ]
                },
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}"
                }
            }
        },
        {
            "name": "linux-ninja-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "generator": "Ninja"
        },
        {
            "name": "linux-gcc-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "g++"
            }
        },
        {
            "name": "linux-clang-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "clang++"
            }
        },
        {
            "name": "linux-gcc-debug",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are enabled. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "linux-gcc-release",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are disabled and optimizations are enabled. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "linux-gcc-asan",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are enabled and the Address sanitizier is active. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "linux-gcc-tsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Thread sanitizier is active. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC sanitize=thread",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "thread"
            }
        },
        {
            "name": "linux-gcc-lsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Memory-Leak sanitizier is active. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC sanitize=leak",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "leak"
            }
        },
        {
            "name": "linux-gcc-ubsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Undefined-Behavior sanitizier is active. It uses Ninja generator and GCC compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-gcc-base"
            ],
            "displayName": "GCC sanitize=undefined",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "undefined"
            }
        },
        {
            "name": "linux-clang-debug",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are enabled. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "linux-clang-release",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are disabled and optimizations are enabled. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "linux-clang-asan",
            "description": "Configuration preset for Linux OS in an x64 (64 bits) CPU, where the debug flags are enabled and the Address sanitizier is active. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "linux-clang-tsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Thread sanitizier is active. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang sanitize=thread",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "thread"
            }
        },
        {
            "name": "linux-clang-lsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Memory-Leak sanitizier is active. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang sanitize=leak",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "leak"
            }
        },
        {
            "name": "linux-clang-ubsan",
            "description": "Configuration preset for Linux OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Undefined-Behavior sanitizier is active. It uses Ninja generator and Clang compiler.",
            "inherits": [
                "linux-base",
                "linux-ninja-base",
                "linux-clang-base"
            ],
            "displayName": "Clang sanitize=undefined",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "undefined"
            }
        },
        {
            "name": "windows-base",
            "hidden": true,
            "inherits": [
                "common-base"
            ],
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "cacheVariables": {
                "VCPKG_TARGET_TRIPLET": "x64-windows"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "Windows"
                    ]
                }
            }
        },
        {
            "name": "windows-vs2022-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "generator": "Visual Studio 17 2022"
        },
        {
            "name": "windows-ninja-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "generator": "Ninja",
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "cl"
            }
        },
        {
            "name": "windows-vs2022-debug",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are enabled. It uses VS2022 generator and compiler.",
            "inherits": [
                "windows-base",
                "windows-vs2022-base"
            ],
            "displayName": "VS2022 Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "windows-vs2022-release",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are disabled and the optimizations are enabled. It uses VS2022 generator and compiler.",
            "inherits": [
                "windows-base",
                "windows-vs2022-base"
            ],
            "displayName": "VS2022 Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "windows-vs2022-asan",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Address sanitizer is active. It uses VS2022 generator and compiler.",
            "inherits": [
                "windows-base",
                "windows-vs2022-base"
            ],
            "displayName": "VS2022 sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "windows-ninja-debug",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are enabled. It uses Ninja generator and CL compiler.",
            "inherits": [
                "windows-base",
                "windows-ninja-base"
            ],
            "displayName": "Ninja Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "windows-ninja-release",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are disabled and the optimizations are enabled. It uses Ninja generator and CL compiler.",
            "inherits": [
                "windows-base",
                "windows-ninja-base"
            ],
            "displayName": "Ninja Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "windows-ninja-asan",
            "description": "Configuration preset for Windows OS in a x64 (64 bits) CPU, where the debug flags are enabled and the Address sanitizer is active. It uses Ninja generator and CL compiler.",
            "inherits": [
                "windows-base",
                "windows-ninja-base"
            ],
            "displayName": "Ninja sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "macos-base",
            "hidden": true,
            "inherits": [
                "common-base"
            ],
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "vendor": {
                "microsoft.com/VisualStudioSettings/CMake/1.0": {
                    "hostOS": [
                        "macOS"
                    ]
                },
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}"
                }
            }
        },
        {
            "name": "macos-x64-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "cacheVariables": {
                "CMAKE_OSX_ARCHITECTURES": "x86_64",
                "CMAKE_APPLE_SILICON_PROCESSOR": "x86_64",
                "VCPKG_TARGET_TRIPLET": "x64-osx"
            }
        },
        {
            "name": "macos-arm64-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "cacheVariables": {
                "CMAKE_OSX_ARCHITECTURES": "arm64",
                "CMAKE_APPLE_SILICON_PROCESSOR": "arm64",
                "VCPKG_TARGET_TRIPLET": "arm64-osx"
            }
        },
        {
            "name": "macos-ninja-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "generator": "Ninja"
        },
        {
            "name": "macos-xcode-base",
            "hidden": true,
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "generator": "XCode"
        },
        {
            "name": "macos-x64-ninja-debug",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are enabled. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "macos-x64-ninja-release",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are disabled and the optimizations are enabled. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "macos-x64-ninja-asan",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are enabled and the Address sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "macos-x64-ninja-tsan",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are enabled and the Thread sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja sanitize=thread",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "thread"
            }
        },
        {
            "name": "macos-x64-ninja-lsan",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are enabled and the Memory-Leak sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja sanitize=leak",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "leak"
            }
        },
        {
            "name": "macos-x64-ninja-ubsan",
            "description": "Configuration preset for mac OS in a Intel (64 bits) CPU, where the debug flags are enabled and the Undefined-Behavior sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-x64-base",
                "macos-ninja-base"
            ],
            "displayName": "x64 Ninja sanitize=undefined",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "undefined"
            }
        },
        {
            "name": "macos-arm64-ninja-debug",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are enabled. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja Debug",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": false
            }
        },
        {
            "name": "macos-arm64-ninja-release",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are disabled and the optimizations are enabled. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja Release",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "SANITIZE": false
            }
        },
        {
            "name": "macos-arm64-ninja-asan",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are enabled and the Address sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja sanitize=address",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "address"
            }
        },
        {
            "name": "macos-arm64-ninja-tsan",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are enabled and the Thread sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja sanitize=thread",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "thread"
            }
        },
        {
            "name": "macos-arm64-ninja-lsan",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are enabled and the Memory-Leak sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja sanitize=leak",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "leak"
            }
        },
        {
            "name": "macos-arm64-ninja-ubsan",
            "description": "Configuration preset for mac OS in a Apple Silicon (64 bits) CPU, where the debug flags are enabled and the Undefined-Behavior sanitizer is active. It uses Ninja generator and default compiler.",
            "inherits": [
                "macos-base",
                "macos-arm64-base",
                "macos-ninja-base"
            ],
            "displayName": "arm64 Ninja sanitize=undefined",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "SANITIZE": "undefined"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "common-base",
            "hidden": true,
            "cleanFirst": false
        },
        {
            "name": "linux-gcc-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC Debug",
            "configurePreset": "linux-gcc-debug"
        },
        {
            "name": "linux-gcc-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC Release",
            "configurePreset": "linux-gcc-release"
        },
        {
            "name": "linux-gcc-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=address",
            "configurePreset": "linux-gcc-asan"
        },
        {
            "name": "linux-gcc-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=thread",
            "configurePreset": "linux-gcc-tsan"
        },
        {
            "name": "linux-gcc-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=leak",
            "configurePreset": "linux-gcc-lsan"
        },
        {
            "name": "linux-gcc-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=undefined",
            "configurePreset": "linux-gcc-ubsan"
        },
        {
            "name": "linux-clang-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang Debug",
            "configurePreset": "linux-clang-debug"
        },
        {
            "name": "linux-clang-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang Release",
            "configurePreset": "linux-clang-release"
        },
        {
            "name": "linux-clang-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=address",
            "configurePreset": "linux-clang-asan"
        },
        {
            "name": "linux-clang-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=thread",
            "configurePreset": "linux-clang-tsan"
        },
        {
            "name": "linux-clang-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=leak",
            "configurePreset": "linux-clang-lsan"
        },
        {
            "name": "linux-clang-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=undefined",
            "configurePreset": "linux-clang-ubsan"
        },
        {
            "name": "windows-x86-base",
            "inherits": [
                "common-base"
            ],
            "hidden": true
        },
        {
            "name": "windows-vs2022-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 Debug",
            "configurePreset": "windows-vs2022-debug"
        },
        {
            "name": "windows-vs2022-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 Release",
            "configurePreset": "windows-vs2022-release"
        },
        {
            "name": "windows-vs2022-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 sanitize=address",
            "configurePreset": "windows-vs2022-asan"
        },
        {
            "name": "windows-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja Debug",
            "configurePreset": "windows-ninja-debug"
        },
        {
            "name": "windows-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja Release",
            "configurePreset": "windows-ninja-release"
        },
        {
            "name": "windows-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja sanitize=address",
            "configurePreset": "windows-ninja-asan"
        },
        {
            "name": "macos-x64-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja Debug",
            "configurePreset": "macos-x64-ninja-debug"
        },
        {
            "name": "macos-x64-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja Release",
            "configurePreset": "macos-x64-ninja-release"
        },
        {
            "name": "macos-x64-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=address",
            "configurePreset": "macos-x64-ninja-asan"
        },
        {
            "name": "macos-x64-ninja-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=thread",
            "configurePreset": "macos-x64-ninja-tsan"
        },
        {
            "name": "macos-x64-ninja-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=leak",
            "configurePreset": "macos-x64-ninja-lsan"
        },
        {
            "name": "macos-x64-ninja-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=undefined",
            "configurePreset": "macos-x64-ninja-ubsan"
        },
        {
            "name": "macos-arm64-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja Debug",
            "configurePreset": "macos-arm64-ninja-debug"
        },
        {
            "name": "macos-arm64-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja Release",
            "configurePreset": "macos-arm64-ninja-release"
        },
        {
            "name": "macos-arm64-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=address",
            "configurePreset": "macos-arm64-ninja-asan"
        },
        {
            "name": "macos-arm64-ninja-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=thread",
            "configurePreset": "macos-arm64-ninja-tsan"
        },
        {
            "name": "macos-arm64-ninja-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=leak",
            "configurePreset": "macos-arm64-ninja-lsan"
        },
        {
            "name": "macos-arm64-ninja-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=undefined",
            "configurePreset": "macos-arm64-ninja-ubsan"
        }
    ],
    "testPresets": [
        {
            "name": "common-base",
            "description": "Basic shared test settings",
            "hidden": true,
            "execution": {
                "noTestsAction": "error",
                "stopOnFailure": false
            },
            "output": {
                "outputOnFailure": true
            }
        },
        {
            "name": "linux-gcc-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC Debug",
            "configurePreset": "linux-gcc-debug"
        },
        {
            "name": "linux-gcc-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC Release",
            "configurePreset": "linux-gcc-release"
        },
        {
            "name": "linux-gcc-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=address",
            "configurePreset": "linux-gcc-asan"
        },
        {
            "name": "linux-gcc-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=thread",
            "configurePreset": "linux-gcc-tsan"
        },
        {
            "name": "linux-gcc-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=leak",
            "configurePreset": "linux-gcc-lsan"
        },
        {
            "name": "linux-gcc-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "GCC sanitize=undefined",
            "configurePreset": "linux-gcc-ubsan"
        },
        {
            "name": "linux-clang-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang Debug",
            "configurePreset": "linux-clang-debug"
        },
        {
            "name": "linux-clang-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang Release",
            "configurePreset": "linux-clang-release"
        },
        {
            "name": "linux-clang-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=address",
            "configurePreset": "linux-clang-asan"
        },
        {
            "name": "linux-clang-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=thread",
            "configurePreset": "linux-clang-tsan"
        },
        {
            "name": "linux-clang-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=leak",
            "configurePreset": "linux-clang-lsan"
        },
        {
            "name": "linux-clang-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Clang sanitize=undefined",
            "configurePreset": "linux-clang-ubsan"
        },
        {
            "name": "windows-x86-base",
            "inherits": [
                "common-base"
            ],
            "hidden": true
        },
        {
            "name": "windows-vs2022-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 Debug",
            "configurePreset": "windows-vs2022-debug"
        },
        {
            "name": "windows-vs2022-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 Release",
            "configurePreset": "windows-vs2022-release"
        },
        {
            "name": "windows-vs2022-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "VS2022 sanitize=address",
            "configurePreset": "windows-vs2022-asan"
        },
        {
            "name": "windows-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja Debug",
            "configurePreset": "windows-ninja-debug"
        },
        {
            "name": "windows-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja Release",
            "configurePreset": "windows-ninja-release"
        },
        {
            "name": "windows-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "Ninja sanitize=address",
            "configurePreset": "windows-ninja-asan"
        },
        {
            "name": "macos-x64-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja Debug",
            "configurePreset": "macos-x64-ninja-debug"
        },
        {
            "name": "macos-x64-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja Release",
            "configurePreset": "macos-x64-ninja-release"
        },
        {
            "name": "macos-x64-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=address",
            "configurePreset": "macos-x64-ninja-asan"
        },
        {
            "name": "macos-x64-ninja-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=thread",
            "configurePreset": "macos-x64-ninja-tsan"
        },
        {
            "name": "macos-x64-ninja-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=leak",
            "configurePreset": "macos-x64-ninja-lsan"
        },
        {
            "name": "macos-x64-ninja-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "x64 Ninja sanitize=undefined",
            "configurePreset": "macos-x64-ninja-ubsan"
        },
        {
            "name": "macos-arm64-ninja-debug",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja Debug",
            "configurePreset": "macos-arm64-ninja-debug"
        },
        {
            "name": "macos-arm64-ninja-release",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja Release",
            "configurePreset": "macos-arm64-ninja-release"
        },
        {
            "name": "macos-arm64-ninja-asan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=address",
            "configurePreset": "macos-arm64-ninja-asan"
        },
        {
            "name": "macos-arm64-ninja-tsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=thread",
            "configurePreset": "macos-arm64-ninja-tsan"
        },
        {
            "name": "macos-arm64-ninja-lsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=leak",
            "configurePreset": "macos-arm64-ninja-lsan"
        },
        {
            "name": "macos-arm64-ninja-ubsan",
            "inherits": [
                "common-base"
            ],
            "displayName": "arm64 Ninja sanitize=undefined",
            "configurePreset": "macos-arm64-ninja-ubsan"
        }
    ]
}
